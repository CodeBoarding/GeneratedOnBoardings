{
  "description": "The Template Rendering component in Flask is responsible for generating dynamic web pages by combining templates with data. It uses the Jinja2 templating engine to render templates from the application's template folder or from a string. The component provides functions to render templates and stream templates, both from files and strings. It also includes a custom Jinja2 loader that allows templates to be loaded from various sources.",
  "components": [
    {
      "name": "render_template",
      "description": "Renders a template from the application's template folder using Jinja2, passing the provided context variables to the template. It returns the rendered HTML as a string.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating:render_template",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 138,
          "reference_end_line": 150
        }
      ]
    },
    {
      "name": "render_template_string",
      "description": "Renders a template from a string using Jinja2, passing the provided context variables to the template. It returns the rendered HTML as a string.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating:render_template_string",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 153,
          "reference_end_line": 162
        }
      ]
    },
    {
      "name": "_render",
      "description": "An internal helper function that performs the actual rendering of templates using Jinja2's `render` method. It's used by both `render_template` and `render_template_string`.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating:_render",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 126,
          "reference_end_line": 135
        }
      ]
    },
    {
      "name": "stream_template",
      "description": "Streams a template from the application's template folder using Jinja2, passing the provided context variables to the template. It returns a response object that streams the rendered HTML.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating:stream_template",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 188,
          "reference_end_line": 204
        }
      ]
    },
    {
      "name": "stream_template_string",
      "description": "Streams a template from a string using Jinja2, passing the provided context variables to the template. It returns a response object that streams the rendered HTML.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating:stream_template_string",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 207,
          "reference_end_line": 219
        }
      ]
    },
    {
      "name": "_stream",
      "description": "An internal helper function that performs the actual streaming of templates using Jinja2's `stream` method. It's used by both `stream_template` and `stream_template_string`.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating:_stream",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 165,
          "reference_end_line": 185
        }
      ]
    },
    {
      "name": "DispatchingJinjaLoader",
      "description": "A custom Jinja2 loader that allows templates to be loaded from different sources based on the template name. It dispatches to different loaders based on the template name, allowing templates to be loaded from various sources.",
      "referenced_source_code": [
        {
          "qualified_name": "src.flask.templating.DispatchingJinjaLoader:get_source",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 60,
          "reference_end_line": 65
        },
        {
          "qualified_name": "src.flask.templating.DispatchingJinjaLoader:_get_source_explained",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 67,
          "reference_end_line": 89
        },
        {
          "qualified_name": "src.flask.templating.DispatchingJinjaLoader:_get_source_fast",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 91,
          "reference_end_line": 99
        },
        {
          "qualified_name": "src.flask.templating.DispatchingJinjaLoader:_iter_loaders",
          "reference_file": "/mnt/e/StartUp/repos/flask/src/flask/templating.py",
          "reference_start_line": 101,
          "reference_end_line": 109
        }
      ]
    }
  ],
  "components_relations": [
    {
      "relation": "calls",
      "src_name": "render_template",
      "dst_name": "_render"
    },
    {
      "relation": "calls",
      "src_name": "render_template_string",
      "dst_name": "_render"
    },
    {
      "relation": "calls",
      "src_name": "stream_template",
      "dst_name": "_stream"
    },
    {
      "relation": "calls",
      "src_name": "stream_template_string",
      "dst_name": "_stream"
    },
    {
      "relation": "calls",
      "src_name": "DispatchingJinjaLoader:get_source",
      "dst_name": "DispatchingJinjaLoader:_get_source_explained"
    },
    {
      "relation": "calls",
      "src_name": "DispatchingJinjaLoader:get_source",
      "dst_name": "DispatchingJinjaLoader:_get_source_fast"
    },
    {
      "relation": "calls",
      "src_name": "DispatchingJinjaLoader:_get_source_explained",
      "dst_name": "DispatchingJinjaLoader:_iter_loaders"
    },
    {
      "relation": "calls",
      "src_name": "DispatchingJinjaLoader:_get_source_fast",
      "dst_name": "DispatchingJinjaLoader:_iter_loaders"
    }
  ]
}